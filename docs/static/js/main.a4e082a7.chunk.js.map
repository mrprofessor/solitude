{"version":3,"sources":["actions/index.js","components/appbar/Appbar.js","components/appbar/AppbarContainer.js","components/customEditor/CustomEditor.js","components/customEditor/CustomEditorContainer.js","components/codeBlock/CodeBlock.js","components/resultPane/ResultPane.js","components/splitView/SplitView.js","components/splitView/SplitViewContainer.js","shared/gitHubUser/GitHubUser.js","utils/utils.js","shared/customModal/CustomModal.js","components/toolbar/Toolbar.js","components/toolbar/ToolbarContainer.js","shared/customButton/CustomButton.js","shared/findSolitdueRepository/FindSolitudeRepository.js","components/modal/RootModalContainer.js","components/modal/GitModalContainer.js","auth/AuthClient.js","App.js","serviceWorker.js","reducers/editor.js","reducers/splitPane.js","reducers/markdown.js","reducers/auth.js","reducers/modal.js","reducers/index.js","index.js"],"names":["updateMarkdownValue","text","type","updatePaneSize","size","Appbar","onViewModeChange","className","width","height","onClick","connect","dispatch","value","CustomEditor","onValueChange","onSelectedEditorChange","markdownValue","options","mode","lineNumbers","spellcheck","theme","onBeforeChange","editor","data","onSelection","state","editorState","CodeBlock","this","props","language","style","base16AteliersulphurpoolLight","PureComponent","defaultProps","source","escapeHtml","renderers","code","SplitView","paneSize","onPaneSizeChange","split","defaultSize","onDragFinished","CustomEditorContainer","splitPane","LIST_REPO_QUERY","gql","ListRepository","useQuery","loading","error","src","viewer","avatarUrl","readTextFile","file","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","readAsText","handleRichTextButtonClick","isEmpty","selectedText","getSelection","cursor","getCursor","setCursor","line","A1","A2","ch","B1","findWordAt","anchor","B2","head","setSelection","test","replaceSelection","focus","match","input","repeat","Number","CustomModal","modalTitle","isModalOpen","modalBody","onModalClose","title","visible","onOk","onCancel","Toolbar","token","handleNewFileUpload","handleModalOpen","GitHubUser","modalType","href","config","GITHUB_APP_CLIENT_ID","event","a","async","fileSelector","document","createElement","onchange","files","fileContent","console","preventDefault","click","handleUploadClick","fileName","element","getValue","Blob","URL","createObjectURL","download","body","appendChild","auth","modalState","modalProps","CustomButton","label","FindSolitudeRepository","useState","setData","setLoading","solitudeRepo","setSolitudeRepo","client","useApolloClient","useEffect","query","hasNextPage","allResults","variables","fetchPolicy","repositories","pageInfo","nodes","endCursor","fetchAllRepositories","find","repo","name","findSolitudeRepository","log","MODAL_COMPONENTS","GIT_MODAL","hideModal","isOpen","gitHubLink","window","location","onGitConnectClick","modal","SpecificModal","authClient","ApolloClient","uri","request","operation","setContext","headers","authorization","onTokenChange","updateToken","setToken","fetch","then","response","json","Error","catch","AppbarContainer","ToolbarContainer","SplitViewContainer","Boolean","hostname","action","initialState","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4e082a7.chunk.js","sourcesContent":["export const updateMarkdownValue = text => ({\n  type: \"UPDATE_MARKDOWN_VALUE\",\n  text\n});\n\nexport const updateEditorState = editorState => ({\n  type: \"UPDATE_EDITOR_STATE\",\n  editorState\n});\n\nexport const updatePaneSize = size => ({\n  type: \"UPDATE_PANE_SIZE\",\n  size\n});\n\nexport const updateToken = token => ({\n  type: \"UPDATE_TOKEN\",\n  token\n});\n\nexport const showModal = ({ modalType, modalProps }) => ({\n  type: \"SHOW_MODAL\",\n  modalType,\n  modalProps\n});\n\nexport const hideModal = () => ({\n  type: \"HIDE_MODAL\"\n});\n","import React from \"react\";\nimport { MdFormatAlignLeft } from \"react-icons/md\";\nimport { MdChromeReaderMode } from \"react-icons/md\";\nimport { TiEye } from \"react-icons/ti/\";\nimport \"../../styles/Appbar.css\";\n\nconst Appbar = ({ onViewModeChange }) => {\n  return (\n    <div className=\"appbar\">\n      <div className=\"logo\">\n        <span>Solitude</span>\n      </div>\n\n      <div className=\"modebar\">\n        <MdFormatAlignLeft\n          width=\"22\"\n          height=\"22\"\n          onClick={() => onViewModeChange(\"100%\")}\n        />\n        <MdChromeReaderMode\n          width=\"22\"\n          height=\"22\"\n          onClick={() => onViewModeChange(\"50%\")}\n        />\n        <TiEye width=\"22\" height=\"22\" onClick={() => onViewModeChange(\"0%\")} />\n      </div>\n    </div>\n  );\n};\n\nexport default Appbar;\n","import { connect } from \"react-redux\";\nimport { updatePaneSize } from \"../../actions\";\nimport Appbar from \"./Appbar.js\";\n\nconst mapDispatchToProps = dispatch => ({\n  onViewModeChange: value => dispatch(updatePaneSize(value))\n});\n\nexport default connect(null, mapDispatchToProps)(Appbar);\n","import React, { useState } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\n\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/neo.css\";\n// Import supported languages here\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/jsx/jsx\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/go/go\";\nimport \"codemirror/mode/rust/rust\";\nimport \"codemirror/mode/markdown/markdown\";\nimport \"codemirror/mode/gfm/gfm\";\nimport \"codemirror/mode/shell/shell\";\n\nimport \"../../styles/CodeMirror.css\";\n\nconst CustomEditor = ({\n  onValueChange,\n  onSelectedEditorChange,\n  markdownValue\n}) => {\n  return (\n    <CodeMirror\n      options={{\n        mode: \"gfm\",\n        lineNumbers: true,\n        spellcheck: true,\n        theme: \"neo\"\n        //autofocus: true,\n      }}\n      value={markdownValue}\n      onBeforeChange={(editor, data, value) => {\n        onValueChange(value);\n      }}\n      onSelection={(editor, data) => {\n        onSelectedEditorChange(editor);\n      }}\n      height=\"100%\"\n    />\n  );\n};\n\nexport default CustomEditor;\n\n// TODO\n// Editor is set to autofocus, and onFocus the editorState will be\n// updated.\n// Remove onFocus and add initialize the editorState with a codemirror\n// instance\n//onFocus={(editor, data) => {\n//onSelectedEditorChange(editor);\n//}}\n","import { connect } from \"react-redux\";\nimport { updateMarkdownValue, updateEditorState } from \"../../actions\";\nimport CustomEditor from \"./CustomEditor.js\";\n\nconst mapStateToProps = state => ({\n  markdownValue: state.markdownValue\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onValueChange: value => dispatch(updateMarkdownValue(value)),\n  onSelectedEditorChange: editor => dispatch(updateEditorState(editor))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomEditor);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport {\n  ghcolors,\n  hopscotch,\n  pojoaque,\n  vs,\n  xonokai,\n  base16AteliersulphurpoolLight,\n  cb,\n  prism\n} from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter\n        language={language}\n        style={base16AteliersulphurpoolLight}\n      >\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"../codeBlock/CodeBlock\";\n\nimport { connect } from \"react-redux\";\n\nconst ResultPane = ({ markdownValue }) => {\n  return (\n    <ReactMarkdown\n      className={\"react-markdown\"}\n      source={markdownValue}\n      //source={\"\"}\n      escapeHtml={false}\n      renderers={{ code: CodeBlock }}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  markdownValue: state.markdownValue\n});\n\nexport default connect(mapStateToProps)(ResultPane);\n","import React from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport CustomEditorContainer from \"../customEditor/CustomEditorContainer.js\";\nimport ResultPane from \"../resultPane/ResultPane.js\";\n\nconst SplitView = ({ paneSize, onPaneSizeChange }) => {\n  return (\n    <SplitPane\n      split=\"vertical\"\n      defaultSize={paneSize}\n      size={paneSize}\n      //defaultSize={parseInt(localStorage.getItem(\"splitPos\"), 10)}\n      //onChange={size => localStorage.setItem(\"splitPos\", size)}\n      onDragFinished={size => onPaneSizeChange(size)}\n    >\n      <div className=\"editor-pane\">\n        {paneSize !== \"0%\" && <CustomEditorContainer />}\n      </div>\n      <div className=\"result-pane\">\n        <ResultPane />\n      </div>\n    </SplitPane>\n  );\n};\n\nexport default SplitView;\n","import { connect } from \"react-redux\";\nimport { updatePaneSize } from \"../../actions\";\nimport SplitView from \"./SplitView.js\";\n\nconst mapStateToProps = state => ({\n  paneSize: state.splitPane.size\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onPaneSizeChange: value => dispatch(updatePaneSize(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SplitView);\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Avatar } from \"antd\";\n\nconst LIST_REPO_QUERY = gql`\n  {\n    viewer {\n      login\n      avatarUrl\n    }\n  }\n`;\n\nconst ListRepository = () => {\n  const { loading, error, data } = useQuery(LIST_REPO_QUERY);\n\n  //return <>{data && data.viewer.login}</>\n  return <Avatar src={data && data.viewer.avatarUrl} size=\"small\" />;\n};\n\nexport default ListRepository;\n","import { isEmpty } from \"lodash\";\n\nexport const readTextFile = file => {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    // Listener\n    reader.onload = e => {\n      resolve(e.target.result);\n    };\n    reader.onerror = e => reject(e);\n\n    reader.readAsText(file);\n  });\n};\n\nexport const handleRichTextButtonClick = ({ type = \"\", editorState }) => {\n  // As we don't have the editor state initialized, return null\n  if (isEmpty(editorState)) return null;\n  let selectedText = editorState.getSelection();\n  let cursor = editorState.getCursor();\n\n  switch (type) {\n    case \"header\":\n      editorState.setCursor(cursor.line, 0);\n      // FIXME\n      // Use better variables\n      const A1 = editorState.getCursor().line;\n      const A2 = editorState.getCursor().ch;\n      const B1 = editorState.findWordAt({ line: A1, ch: A2 }).anchor.ch;\n      const B2 = editorState.findWordAt({ line: A1, ch: A2 }).head.ch;\n\n      editorState.setSelection({ line: A1, ch: B1 }, { line: A1, ch: B2 });\n      selectedText = editorState.getSelection();\n\n      // If header in range of h1-h5\n      if (/^#{1,5}$/.test(selectedText)) {\n        editorState.replaceSelection(selectedText + \"#\");\n      }\n      // If header is h6\n      else if (/^#{6,}$/.test(selectedText)) {\n        break;\n      } else {\n        editorState.replaceSelection(\"# \" + selectedText);\n      }\n      editorState.focus();\n      break;\n    case \"bold\":\n      editorState.replaceSelection(\"**\" + (selectedText || \" \") + \"**\");\n      editorState.focus();\n      break;\n    case \"italic\":\n      editorState.replaceSelection(\"*\" + (selectedText || \" \") + \"*\");\n      editorState.focus();\n      break;\n    case \"strikethrough\":\n      editorState.replaceSelection(\"~~\" + (selectedText || \" \") + \"~~\");\n      editorState.focus();\n      break;\n    case \"hr\":\n      editorState.setCursor(cursor.line + 1, 0);\n      editorState.replaceSelection(\"\\n\\n---\\n\");\n      editorState.focus();\n      break;\n    case (type.match(/h[1-6]{1}/) || {}).input:\n      editorState.setCursor(cursor.line, 0);\n      editorState.replaceSelection(\"#\".repeat(Number(type[1])) + \" \");\n      editorState.focus();\n      break;\n    case \"table\":\n      const sampleTable =\n        \"\\n| Tables        | Are           | Cool  |\\n\" +\n        \"| ------------- |:-------------:| -----:|\\n\" +\n        \"| col 3 is      | right-aligned | $1600 |\\n\" +\n        \"| col 2 is      | centered      |   $12 |\\n\" +\n        \"| zebra stripes | are neat      |    $1 |\\n\";\n      editorState.setCursor(cursor.line, 0);\n      editorState.replaceSelection(sampleTable);\n      editorState.focus();\n      break;\n    case \"code\":\n      editorState.replaceSelection(\n        `\\n\\`\\`\\`language\\n${selectedText}\\n\\`\\`\\`\\n`\n      );\n      editorState.focus();\n      break;\n    default:\n      editorState.replaceSelection(selectedText);\n  }\n};\n\n// https://stackoverflow.com/a/44661948/6781563\nexport const handleDownloadClick = ({ editorState, fileName }) => {\n  const element = document.createElement(\"a\");\n  let markdownValue = \"\";\n  if (!isEmpty(editorState)) {\n    markdownValue = editorState.getValue();\n  }\n  const file = new Blob([markdownValue], {\n    type: \"text/plain\"\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = fileName;\n  document.body.appendChild(element); // Required for this to work in FireFox\n  element.click();\n};\n\n// https://github.com/elfrog/apib-editor/blob/master/src/platform/web/app-service.js\nexport const handleUploadClick = async ({ event, handleNewFileUpload }) => {\n  const fileSelector = document.createElement(\"input\");\n  fileSelector.type = \"file\";\n\n  fileSelector.onchange = async e => {\n    const file = e.target.files[0];\n    let fileContent;\n    try {\n      fileContent = await readTextFile(file);\n      handleNewFileUpload(fileContent);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  event.preventDefault();\n  fileSelector.click();\n};\n\n// TODO\n// Create a custom hook\nexport const fetchAllRepositories = async ({\n  client,\n  setLoading,\n  setData,\n  query\n}) => {\n  let hasNextPage = true;\n  let cursor = null;\n  let allResults = null;\n\n  while (hasNextPage) {\n    const { data } = await client.query({\n      query: query,\n      variables: {\n        cursor\n      },\n      fetchPolicy: \"no-cache\"\n    });\n\n    if (isEmpty(allResults)) {\n      allResults = data;\n    } else {\n      allResults.viewer.repositories.pageInfo =\n        data.viewer.repositories.pageInfo;\n      allResults.viewer.repositories.nodes = [\n        ...allResults.viewer.repositories.nodes,\n        ...data.viewer.repositories.nodes\n      ];\n    }\n\n    hasNextPage = data.viewer.repositories.pageInfo.hasNextPage;\n    cursor = data.viewer.repositories.pageInfo.endCursor;\n  }\n  setLoading(false);\n  setData(allResults);\n};\n\nexport const findSolitudeRepository = data => {\n  // Search for solitude created repository\n  // TODO\n  // Use a better method\n  //\n  // Check for repository named `{login}-solidute-notes`\n  //const solitude_generated_repo = `{data.viewer.login}-solitude-notes`;\n  const expected_repo = data.viewer.repositories.nodes.find(\n    repo => repo.name === \"solitude\"\n  );\n  return expected_repo;\n};\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\n\nconst CustomModal = ({\n  modalTitle = \"Custom modal\",\n  isModalOpen,\n  modalBody,\n  onModalClose\n}) => {\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={() => onModalClose()}\n      onCancel={() => onModalClose()}\n    >\n      {modalBody}\n    </Modal>\n  );\n};\n\nexport default CustomModal;\n","import React from \"react\";\nimport {\n  AiOutlineBold,\n  AiOutlineCode,\n  AiOutlineItalic,\n  AiOutlineGithub,\n  AiOutlineOrderedList,\n  AiOutlineUnorderedList,\n  AiOutlineUnderline,\n  AiOutlineStrikethrough,\n  AiOutlineSave,\n  AiOutlineHighlight,\n  AiOutlineTable,\n  AiOutlineFontSize,\n  AiOutlineMinus,\n  AiOutlineFolderOpen\n} from \"react-icons/ai\";\n\nimport { FaGithub } from \"react-icons/fa\";\nimport { GoGithubAction } from \"react-icons/go\";\n\nimport GitHubUser from \"../../shared/gitHubUser/GitHubUser.js\";\nimport config from \"../../data/config.json\";\nimport {\n  handleRichTextButtonClick,\n  handleDownloadClick,\n  handleUploadClick\n} from \"../../utils/utils.js\";\n\nimport CustomModal from \"../../shared/customModal/CustomModal.js\";\n\nconst Toolbar = ({\n  editorState,\n  token,\n  handleNewFileUpload,\n  handleModalOpen\n}) => {\n  return (\n    <div className=\"toolbar\">\n      <ul>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"header\", editorState })\n          }\n        >\n          <AiOutlineFontSize width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"bold\", editorState })\n          }\n        >\n          <AiOutlineBold width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"italic\", editorState })\n          }\n        >\n          <AiOutlineItalic width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"strikethrough\", editorState })\n          }\n        >\n          <AiOutlineStrikethrough width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() => handleRichTextButtonClick({ type: \"hr\", editorState })}\n        >\n          <AiOutlineMinus width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"table\", editorState })\n          }\n        >\n          <AiOutlineTable width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            handleRichTextButtonClick({ type: \"code\", editorState })\n          }\n        >\n          <AiOutlineCode width=\"22\" height=\"22\" />\n        </li>\n      </ul>\n      <ul>\n        {!token ? (\n          <li>\n            <a\n              href={`https://github.com/login/oauth/authorize?client_id=${config.GITHUB_APP_CLIENT_ID}&scope=repo`}\n            >\n              <FaGithub width=\"22\" height=\"20\" />\n            </a>\n          </li>\n        ) : (\n          <>\n            <li>\n              <GitHubUser />\n            </li>\n            <li onClick={() => handleModalOpen({ modalType: \"GIT_MODAL\" })}>\n              <GoGithubAction width=\"22\" height=\"20\" />\n            </li>\n          </>\n        )}\n        <li\n          onClick={event =>\n            handleUploadClick({ event: event, handleNewFileUpload })\n          }\n        >\n          <AiOutlineFolderOpen width=\"22\" height=\"22\" />\n        </li>\n        <li\n          onClick={() =>\n            // Change filename later\n            handleDownloadClick({ fileName: \"solitude.md\", editorState })\n          }\n        >\n          <AiOutlineSave width=\"22\" height=\"22\" />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport Toolbar from \"./Toolbar.js\";\nimport { connect } from \"react-redux\";\nimport { updateMarkdownValue, showModal, hideModal } from \"../../actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  handleNewFileUpload: value => dispatch(updateMarkdownValue(value)),\n  handleModalOpen: modalState => dispatch(showModal(modalState))\n  //handleModalClose: modalState => dispatch(hideModal(modalState))\n});\n\nconst mapStateToProps = state => ({\n  editorState: state.editor,\n  token: state.auth.token\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);\n","import React from \"react\";\n\nconst CustomButton = ({ onClick, style, label }) => {\n  return (\n    <button onClick={e => onClick(e)} style={style}>\n      {label}\n    </button>\n  );\n};\n\nexport default CustomButton;\n","import React, { useState, useEffect } from \"react\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport {\n  fetchAllRepositories,\n  findSolitudeRepository\n} from \"../../utils/utils.js\";\n\nconst LIST_REPO_QUERY = gql`\n  query Comments($cursor: String) {\n    viewer {\n      login\n      repositories(first: 10, after: $cursor) {\n        totalCount\n        pageInfo {\n          endCursor\n          hasNextPage\n        }\n        nodes {\n          id\n          name\n          owner {\n            login\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst FindSolitudeRepository = () => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [solitudeRepo, setSolitudeRepo] = useState();\n\n  let solitude_repo = null;\n\n  const client = useApolloClient();\n\n  useEffect(() => {\n    fetchAllRepositories({\n      client,\n      setData,\n      setLoading,\n      query: LIST_REPO_QUERY\n    });\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      //console.log(data);\n      setSolitudeRepo(findSolitudeRepository(data));\n      console.log(solitude_repo);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {!loading && data && solitudeRepo ? (\n        <>\n          <span>{solitudeRepo.name}</span>\n        </>\n      ) : (\n        <span>Loading...</span>\n      )}\n    </div>\n  );\n};\n\nexport default FindSolitudeRepository;\n\n/*\n          <ul>\n            {data.viewer.repositories.nodes &&\n              data.viewer.repositories.nodes.map(repo => (\n                <li key={repo.id}>{repo.name}</li>\n              ))}\n          </ul>\n          */\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GitModalContainer from \"./GitModalContainer.js\";\n\nconst MODAL_COMPONENTS = {\n  GIT_MODAL: GitModalContainer\n};\n\nconst RootModalContainer = ({ modal }) => {\n  console.log(modal.modalType);\n  if (!modal.modalType) return null;\n\n  const SpecificModal = MODAL_COMPONENTS[modal.modalType];\n  return <SpecificModal {...modal} />;\n};\n\nconst mapStateToProps = state => ({\n  modal: state.modal\n});\n\nexport default connect(mapStateToProps)(RootModalContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CustomModal from \"../../shared/customModal/CustomModal.js\";\nimport CustomButton from \"../../shared/customButton/CustomButton.js\";\nimport { hideModal } from \"../../actions\";\nimport config from \"../../data/config.json\";\n//import ListRepository from \"../../shared/listRepository/ListRepository.js\";\nimport FindSolitudeRepository from \"../../shared/findSolitdueRepository/FindSolitudeRepository.js\";\n\nconst GitModalContainer = ({ isOpen, modalProps, hideModal, token }) => {\n  const onGitConnectClick = e => {\n    e.preventDefault();\n    const gitHubLink = `https://github.com/login/oauth/authorize?client_id=${config.GITHUB_APP_CLIENT_ID}&scope=repo`;\n    window.location.href = gitHubLink;\n  };\n\n  return (\n    <CustomModal\n      isModalOpen={isOpen}\n      modalTitle={\"Your notes\"}\n      modalBody={\n        token ? (\n          <div>\n            <FindSolitudeRepository />\n          </div>\n        ) : (\n          <CustomButton\n            label=\"Connect to GitHub\"\n            onClick={e => onGitConnectClick(e)}\n          />\n        )\n      }\n      onModalClose={hideModal}\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  token: state.auth.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  hideModal: () => dispatch(hideModal())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GitModalContainer);\n","import ApolloClient from \"apollo-boost\";\nimport { setContext } from \"apollo-link-context\";\n\nconst authClient = token => {\n  const client = new ApolloClient({\n    uri: \"https://api.github.com/graphql\",\n\n    request: operation => {\n      //const token = localStorage.getItem(\"token\");\n      operation.setContext({\n        headers: {\n          authorization: token ? `Bearer ${token}` : \"\"\n        }\n      });\n    }\n  });\n  return client;\n};\n\nexport default authClient;\n","import React, { useState, useEffect } from \"react\";\nimport AppbarContainer from \"./components/appbar/AppbarContainer.js\";\nimport SplitViewContainer from \"./components/splitView/SplitViewContainer.js\";\nimport ToolbarContainer from \"./components/toolbar/ToolbarContainer.js\";\nimport RootModalContainer from \"./components/modal/RootModalContainer.js\";\nimport { updateToken } from \"./actions\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport authClient from \"./auth/AuthClient.js\";\nimport { isEmpty } from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport \"antd/dist/antd.css\";\nimport \"./styles/App.css\";\nimport \"./styles/Resizer.css\";\nimport \"./styles/ResultPane.css\";\n\nfunction App({ onTokenChange }) {\n  const [token, setToken] = useState(\"\");\n\n  useEffect(() => {\n    let code =\n      window.location.href.match(/\\?code=(.*)/) &&\n      window.location.href.match(/\\?code=(.*)/)[1];\n    if (code) {\n      fetch(`https://prose-gatekeeper.glitch.me/authenticate/${code}`)\n        .then(response => response.json())\n        .then(({ error, token }) => {\n          if (error) {\n            throw Error(error);\n          }\n          console.log(token);\n          setToken(token);\n          // Store token in redux\n          onTokenChange(token);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }, []);\n\n  const client = authClient(token);\n  return (\n    <div>\n      <ApolloProvider client={client}>\n        <AppbarContainer />\n        <ToolbarContainer />\n        <SplitViewContainer />\n        <RootModalContainer />\n      </ApolloProvider>\n    </div>\n  );\n}\n\n//const mapStateToProps = state => ({\n//editorState: state.editor\n//});\n\nconst mapDispatchToProps = dispatch => ({\n  onTokenChange: token => dispatch(updateToken(token))\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const editor = (state = {}, action) => {\n  switch (action.type) {\n    case \"UPDATE_EDITOR_STATE\":\n      return action.editorState || state;\n    default:\n      return state;\n  }\n};\n\nexport default editor;\n","const splitPane = (state = { size: \"50%\" }, action) => {\n  switch (action.type) {\n    case \"UPDATE_PANE_SIZE\":\n      return { ...state, size: action.size };\n    default:\n      return state;\n  }\n};\n\nexport default splitPane;\n","const markdownValue = (state = \"\", action) => {\n  switch (action.type) {\n    case \"UPDATE_MARKDOWN_VALUE\":\n      return action.text;\n    default:\n      return state;\n  }\n};\n\nexport default markdownValue;\n","const auth = (state = { token: \"\" }, action) => {\n  switch (action.type) {\n    case \"UPDATE_TOKEN\":\n      return { ...state, token: action.token };\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","let initialState = {};\nconst modal = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SHOW_MODAL\":\n      return {\n        ...state,\n        isOpen: true,\n        modalType: action.modalType,\n        modalProps: action.modalProps\n      };\n    case \"HIDE_MODAL\":\n      return { ...initialState, isOpen: false };\n    default:\n      return state;\n  }\n};\n\nexport default modal;\n","import { combineReducers } from \"redux\";\nimport editor from \"./editor.js\";\nimport splitPane from \"./splitPane.js\";\nimport markdownValue from \"./markdown.js\";\nimport auth from \"./auth.js\";\nimport modal from \"./modal.js\";\n\nexport default combineReducers({\n  markdownValue,\n  editor,\n  splitPane,\n  modal,\n  auth\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}